shiny::runApp('Desktop/a8-anjieyao-1739008')
dataset <- midwest
ui <- navbarPage(
"My Charts",
tabPanel("No.1",
selectInput("county",
label = h3("Population of a County"),
choices = dataset$county,
selected = 1
),
selectInput("s",
label = h3("Population of a County"),
choices = dataset$state,
selected = 1
),
helpText("Data from dataset with demographic
information of midwest counties"),
hr(),
checkboxGroupInput("checkGroup",
label = h4("Show Population of Adults"),
choices = list("Yes" = 1, "No" = 2), selected = 2
),
mainPanel(
plotOutput("countyTable"),
h5("Population of Adults"),
textOutput("value")
)
),
tabPanel("No.2",
titlePanel("Percentage of Population in a County"),
sidebarLayout(
sidebarPanel(
helpText("Select a county and its state"),
selectInput("region", "Region:",
choices = dataset$county),
selectInput("state", "State:",
choices = dataset$state),
hr(),
checkboxInput("checkbox",
label = "Show the Detailed Percentage Data")
),
mainPanel(
plotOutput("plot"),
tableOutput("yes")
))
)
)
server <- function(input, output) {
output$value <- renderText({
c <- dataset %>%
filter(county == input$county)%>%
select(popadults)
c
if(input$checkGroup == 1) {
paste0(input$county, ":  ", c)}
})
output$countyTable <- renderPlot({
p <- dataset %>%
filter(county == input$county, state == input$s) %>%
select(popwhite,
popblack, popamerindian,
popasian,popother)
p <- data.frame("name" = c(colnames(p)),
"pop" = c(p$popwhite, p$popblack,
p$popamerindian, p$popasian,
p$popother)
)
p <- ggplot(p, aes(name, pop), fill = adultpop) +
geom_col()
p
})
output$plot <- renderPlot({
filtered <- reactive({
filtered <- dataset%>%
filter(county == input$region, state == input$state) %>%
select(percwhite, percblack, percamerindan, percasian, percother)
filtered <- data.frame("name" = c(colnames(filtered)),
"share" = c(filtered$percwhite, filtered$percblack,
filtered$percamerindan, filtered$percasian,
filtered$percother))
output$yes <- renderTable({
if(input$checkbox ==TRUE) {
f <- toupper(gsub("perc", "",filtered$name))
v <- paste0("Percentage of the ", f, " is ",
round(filtered$share, 2), "%")
}
})
filtered
})
pie <- ggplot(filtered(), aes(x="", y=share, fill=name)) + geom_bar(stat="identity", width=1)
pie <- pie + coord_polar("y", start=0) + geom_text(aes(label = paste0(share, "%")), position = position_stack(vjust = 0.5))
pie <- pie + scale_fill_manual(values=c("seashell1","lavender",
"bisque2", "azure3", "lavenderblush3"))
pie <- pie + labs(x = NULL, y = NULL,
fill = NULL,
title = "Population Percentage")
pie <- pie + theme_classic() + theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, color = "#666666"))
pie
})
}
# Load the shiny, ggplot2, and dplyr libraries
library("shiny")
library("ggplot2")
library("dplyr")
library("styler")
library("lintr")
# Load the shiny, ggplot2, and dplyr libraries
library("shiny")
library("ggplot2")
library("dplyr")
library("shiny")
library("ggplot2")
library("dplyr")
library("styler")
library("lintr")
runApp('Desktop/final project')
View(m)
m <- reactive({
m <- dataset %>%
filter(Sex == "M",
Year == "1996", !is.na(Medal)) %>%
group_by(NOC, Medal)%>%
arrange(NOC) %>%
summarize(count = length(Medal))
View(m)
dataset <- read.csv("dataset/athlete_events.csv", stringsAsFactors = F)
noc <- read.csv("dataset/noc_regions.csv", stringsAsFactors = F)
m <- reactive({
m <- dataset %>%
filter(Sex == "M",
Year == "1996", !is.na(Medal)) %>%
group_by(NOC, Medal)%>%
arrange(NOC) %>%
summarize(count = length(Medal))
View(m)
m <- reactive({
m <- dataset %>%
filter(Sex == "M",
Year == "2014", !is.na(Medal)) %>%
group_by(NOC, Medal)%>%
arrange(NOC) %>%
summarize(count = length(Medal))
m
View(m)
m <- dataset %>%
filter(Sex == "M",
Year == "2014", !is.na(Medal)) %>%
group_by(NOC, Medal)%>%
arrange(NOC) %>%
summarize(count = length(Medal))
View(m)
setwd("~/Desktop/final project")
dataset <- read.csv("dataset/athlete_events.csv", stringsAsFactors = F)
View(dataset)
dataset <- dataset%>%
filter(Year >= "1980")
library("dplyr")
library("shiny")
library("ggplot2")
dataset <- dataset%>%
filter(Year >= "1980")
View(dataset)
runApp()
server <- function(input, output) {
m <- reactive({
m <- dataset %>%
filter(Sex == "M",
Year == input$year, !is.na(Medal)) %>%
group_by(NOC, Medal)%>%
arrange(NOC) %>%
summarize(count = length(Medal))
m
})
output$medalplot <- renderPlot({
plot_m <- ggplot(m, aes(x = NOC, y = count, fill = Medal)) +
geom_col() +
coord_flip()
plot_m
})
}
server <- function(input, output) {
m <- reactive({
m <- dataset %>%
filter(Sex == "M",
Year == input$year, !is.na(Medal)) %>%
group_by(NOC, Medal)%>%
arrange(NOC) %>%
summarize(count = length(Medal))
m
})
output$medalplot <- renderPlot({
plot_m <- ggplot(m, aes(x = NOC, y = count, fill = Medal)) +
geom_col() +
coord_flip()
plot_m
})
}
shinyApp(ui = ui, server = server)
runApp()
runApp()
runApp()
runApp()
ff <- m
runApp()
runApp()
runApp()
runApp()
setwd("~/Desktop/final project")
runApp()
plot_m <- ggplot(m(), aes(x = NOC, y = count, fill = Medal)) +
geom_col() +
coord_flip() +
scale_fill_manual(values=c("gold1","gray70","gold4")) +
ggtitle("Medal counts for women at the 2014/2016 Olympics") +
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
filtered <- dataset %>%
filter(Sex == "F",
Year == "2014", !is.na(Medal)) %>%
group_by(NOC, Medal)%>%
arrange(NOC) %>%
summarize(count = length(Medal))
View(filtered)
runApp()
filtered <- dataset %>%
filter(Sex == "F",
Year == "2016", !is.na(Medal)) %>%
group_by(NOC, Medal)%>%
arrange(NOC) %>%
summarize(count = length(Medal))
View(filtered)
runApp()
runApp()
View(filtered)
filtered <- dataset %>%
filter(Sex == "F",
Year == "2008", !is.na(Medal)) %>%
group_by(NOC, Medal)%>%
arrange(NOC)
View(filtered)
filtered <- dataset %>%
filter(Sex == "F",
Year == "2008", !is.na(Medal)) %>%
group_by(NOC, Medal)%>%
summarize(count = length(Medal)) %>%
group_by(NOC) %>%
summarize(Total = sum(count)) %>%
arrange(Total)
View(filtered)
counts_2016 <- data %>% filter(Year==2016, !is.na(Medal), Sex=="F") %>%
group_by(NOC, Medal) %>%
summarize(Count=length(Medal))
# Order NOC by total medal count
levs_2016 <- counts_2016 %>%
group_by(NOC) %>%
summarize(Total=sum(Count)) %>%
arrange(Total) %>%
select(NOC)
counts_2016$NOC <- factor(counts_2016$NOC, levels=levs_2016$NOC)
counts_2016 <- data %>% filter(Year==2016, !is.na(Medal), Sex=="F") %>%
group_by(NOC, Medal) %>%
summarize(Count=length(Medal))
counts_2016 <- data %>%
filter(Year==2016, !is.na(Medal), Sex=="F") %>%
group_by(NOC, Medal) %>%
summarize(Count=length(Medal))
library("ggplot2")
library("dplyr")
filter(Year==2016, !is.na(Medal), Sex=="F") %>%
group_by(NOC, Medal) %>%
summarize(Count=length(Medal))
counts_2016 <- data %>%
filter(Year==2016, !is.na(Medal), Sex=="F") %>%
group_by(NOC, Medal) %>%
summarize(Count=length(Medal))
counts_2016 <- dataset %>%
filter(Year==2016, !is.na(Medal), Sex=="F") %>%
group_by(NOC, Medal) %>%
summarize(Count=length(Medal))
levs_2016 <- counts_2016 %>%
group_by(NOC) %>%
summarize(Total=sum(Count)) %>%
arrange(Total) %>%
select(NOC)
counts_2016$NOC <- factor(counts_2016$NOC, levels=levs_2016$NOC)
View(levs_2016)
View(counts_2016)
filtered <- dataset %>%
filter(Sex == "F",
Year == "2008", !is.na(Medal)) %>%
group_by(NOC, Medal)%>%
arrange(NOC) %>%
summarize(count = length(Medal))
View(filtered)
filtered <- dataset %>%
filter(Sex == "F",
Year == "2016", !is.na(Medal)) %>%
group_by(NOC, Medal)%>%
arrange(NOC) %>%
summarize(count = length(Medal))
View(filtered)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library("styler")
library("lintr")
style_file("ui.R")
lint("ui.R")
lint("ui.R")
lint("ui.R")
lint("ui.R")
library("styler")
library("lintr")
style_file("ui.R")
lint("ui.R")
style_file("ui.R")
lint("ui.R")
runApp('~/Desktop/INFO-201-Final-Project/Interactive Page #1(Carrie)')
runApp('~/Desktop/INFO-201-Final-Project/Interactive Page #1(Carrie)')
dataset <- read.csv("data/athlete_events.csv", stringsAsFactors = F)
setwd("~/Desktop/INFO-201-Final-Project")
runApp('Interactive Page #1(Carrie)')
dataset <- read.csv("data/athlete_events.csv", stringsAsFactors = F)
runApp('Interactive Page #1(Carrie)')
dataset <- read.csv("data/athlete_events.csv", stringsAsFactors = F)
dataset <- read.csv("data/athlete_events.csv", stringsAsFactors = F)
runApp('Interactive Page #1(Carrie)')
setwd("~/Desktop/INFO-201-Final-Project")
runApp('Interactive Page #1(Carrie)')
runApp('Interactive Page #1(Carrie)')
runApp('Interactive Page #1(Carrie)')
runApp('~/Desktop/final project')
runApp('~/Desktop/final project')
runApp('~/Desktop/final project')
runApp('~/Desktop/final project')
runApp('~/Desktop/final project')
runApp('~/Desktop/final project')
runApp('~/Desktop/final project')
filtered <- dataset %>%
filter(Sex == "F",
Year == "2016", !is.na(Medal)) %>%
group_by(NOC, Medal)%>%
arrange(NOC) %>%
summarize(count = length(Medal))%>%
group_by(NOC)%>%
summarize(Total=sum(Count)) %>%
arrange(Total)
filtered <- dataset %>%
filter(Sex == "F",
Year == "2016", !is.na(Medal)) %>%
group_by(NOC, Medal)%>%
arrange(NOC) %>%
summarize(count = length(Medal))%>%
group_by(NOC)%>%
summarize(Total=sum(count)) %>%
arrange(Total)
View(filtered)
filtered <- dataset %>%
filter(Sex == "F",
Year == "2016", !is.na(Medal)) %>%
group_by(NOC, Medal)%>%
#arrange(NOC) %>%
summarize(count = length(Medal))%>%
group_by(NOC)%>%
summarize(Total=sum(count)) %>%
arrange(Total)
View(filtered)
filtered <- dataset %>%
filter(Sex == "F",
Year == "2016", !is.na(Medal)) %>%
group_by(NOC, Medal)%>%
arrange(NOC) %>%
summarize(count = length(Medal))%>%
filtered$total <- filtered%>%
group_by(NOC)%>%
summarize(Total=sum(Ccount)) %>%
arrange(Total)
filtered <- dataset %>%
filter(Sex == "F",
Year == "2016", !is.na(Medal)) %>%
group_by(NOC, Medal)%>%
arrange(NOC) %>%
summarize(count = length(Medal))%>%
filtered$total <- filtered%>%
group_by(NOC)%>%
summarize(Total=sum(count)) %>%
arrange(Total)
filtered <- dataset %>%
filter(Sex == "F",
Year == "2016", !is.na(Medal)) %>%
group_by(NOC, Medal)%>%
arrange(NOC) %>%
summarize(count = length(Medal))
filtered$total <- filtered%>%
group_by(NOC)%>%
summarize(Total=sum(count)) %>%
arrange(Total)
?factor
runApp('~/Desktop/final project')
runApp('~/Desktop/final project')
filtered <- dataset %>%
filter(Sex == "F",
Year == "2016", !is.na(Medal)) %>%
group_by(NOC, Medal)%>%
arrange(NOC) %>%
summarize(count = length(Medal))%>%
arrange(desc(Medal))
View(filtered)
runApp('~/Desktop/final project')
runApp('~/Desktop/final project')
